version: '3.9'

services:
  client:
    container_name: prakticum-client
    image: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - '${CLIENT_PORT}:80'
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}

  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - awesome
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 1s
      retries: 10
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.15
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_USER}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "7070:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome

volumes:
  pgadmin-data:

networks:
  awesome:
    driver: bridge
