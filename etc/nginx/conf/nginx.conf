events {
}

http {
    include mime.types;
    server {
        listen 80;
        listen [::]:80;
        root $root;
        set $root /;
        #set $my_var https://yandex.ru; # Можно делать переменные

        #include listen; # ~~Нужно~~ можно настроить отдельный файл с директивой listen, если у вас, например, SSL на поддомены единый

        charset utf-8;

        location / {
            root /1game;
            try_files $uri /index.html;
            add_header Access-Control-Allow-Origin *;
        }

        location /ping {
            add_header content-type "application/json";
            return 200 ' {"status": "ok", "message": "pong", "timestamp": "$date_gmt", "env": "<my-env>"}';
          }

          location /src {
            root /1game/client/src; # Например, /var/www

            add_header Cache-Control no-cache;
            expires 0;
          }

        location / {
            proxy_set_header      Host $host;
            proxy_set_header      X-Real-IP $http_x_real_ip;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass            http://localhost:8081/;
            proxy_set_header      X-Forwarded-Proto $scheme;
            proxy_set_header      Cache-Control no-cache;

            client_max_body_size  128m;

            add_header            Last-Modified $date_gmt;
            add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age = 0';

            if_modified_since     off;
            expires               off;
            etag                  off;

            add_header X-App-Env  testing;
          }

        location /api/ {
            proxy_set_header Host some-host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://some-host/api-or-other-route/;
        }
    }
}